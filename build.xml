<?xml version="1.0"?>
<project name="jsf" default="run">
    <property file="build.properties"/>

    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${lib.dir}/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <path id = "libs">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>
    <target name ="init">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir ="${test.dir}"/>
    </target>

    <target name="compile" depends="init">

        <javac srcdir = "${src.dir}" destdir="${classes.dir}" classpathref="libs"/>
        <javac srcdir="${test.dir}" destdir="${compiled-tests.dir}" classpathref="libs"/>


    </target>
    <target name = "clean">
        <delete dir = "${build.dir}"/>
    </target>
    <target name = "xml">
        <xmlvalidate failonerror="no" lenient="yes" warn="yes"
                     classname="org.apache.xerces.parsers.SAXParser"
            classpath="${lib.dir}/${xerces}">
            <fileset dir="${xml.dir}" includes="**/*.xml"/>
        </xmlvalidate>
    </target>
    <target name="build" depends="compile">
        <jar destfile="${destination.jar}" basedir="${classes.dir}">
            <manifest>
                <attribute name ="Created by" value = "${creator}"/>
                <attribute name="Implementation-Vendor" value = "${vendor}"/>
                <attribute name="Implementation-Version" value = "${version}"/>
                <attribute name="Main-Class" value="${main.class}"/>
                <attribute name="Class-Path" value="${lib.dir}"/>
            </manifest>
        </jar>
    </target>

    <target name="doc" depends="compile" >
        <delete dir = "${doc.dir}"/>
        <mkdir dir="${doc.dir}"/>

        <mkdir dir="tmp/"/>
        <checksum totalproperty="md5" todir="tmp/">
            <fileset dir =  "${src.dir}"/>
        </checksum>
        <checksum algorithm="SHA-1" totalproperty="sha1" todir="tmp/">
            <fileset dir ="${src.dir}"/>
        </checksum>
        <delete dir="tmp/"/>


        <javadoc destdir="${doc.dir}" classpathref="libs" sourcepath="${src.dir}"/>


        <jar destfile="${javadoc.jar}" basedir="${doc.dir}">
            <manifest>
                <attribute name="SHA-1" value="${sha1}"/>
                <attribute name="MD5" value="${md5}"/>

            </manifest>
        </jar>
        <echo file ="output.txt">
            sha1=${sha1}
        </echo>
    </target>
    <target name = "env" depends="init">
        <javac target="${jvm.ver}" source="${jvm.ver}" srcdir="${src.dir}" destdir="${classes.dir}" nowarn="on" classpathref="libs">
            <compilerarg value="${args}"/>
        </javac>
        <jar destfile="${destination.jar}" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value ="${main.class}"/>
            </manifest>
        </jar>


    </target>

    <target name = "scp" depends="build">
        <fail message="-Duser parameter does not exist">
            <condition>
                <not>
                    <isset property="user"/>
                </not>
            </condition>
        </fail>
        <fail message="-Dpassword parameter does not exist">
            <condition>
                <not>
                    <isset property="password"/>
                </not>
            </condition>
        </fail>
        <scp file="${destination.jar}"
             todir="${user}${scp.dir}"
             password="${password}"
             port="${scp.port}"
             trust="true"
        />
    </target>
    <target name="history">
        <trycatch>
            <try>
                <antcall target="compile"/>
            </try>
            <catch>
                <exec executable="svn">
                    <arg value="log"/>
                    <arg value="--quiet"/>
                </exec>

                <exec executable="cmd.exe" dir="." failonerror="true" outputproperty="revision.count">
                    <arg line="/c svn log --quiet | find /c 'r'" />
                </exec>

                <condition property="is.revision.count.zero">
                    <equals arg1="${revision.count}" arg2="0" />
                </condition>

                <if>
                    <isset property="is.revision.count.zero" />
                    <then>
                        <fail message="Больше нет рабочих ревизий..."/>
                    </then>
                </if>

                <echo message="Try to load previous version"/>
                <exec executable="svn">
                    <arg value="merge"/>
                    <arg value="-c" />
                    <arg value="-1" />
                    <arg value="." />
                </exec>

                <exec executable="cmd.exe" dir="." failonerror="true">
                    <arg line="/c svn diff > diff.txt" />
                </exec>

                <antcall target="history"/>
            </catch>
        </trycatch>
    </target>

    <target name="alt">
        <!--<trycatch>-->
            <!--<try>-->
                <delete dir="alt-src"/>
                <antcall target="clean"/>
                <mkdir dir="alt-src"/>
                <copy todir="alt-src">
                    <fileset dir="src"/>
                </copy>

                <foreach list="${alt.class.list}" param="variable" target="change-names"/>
                <foreach list="${alt.variable.list}" param="variable" target="change-names"/>

                <var name="destination.jar" unset="true"/>
                <property name="destination.jar" value="${alt.jar}"/>

                <var name="src.dir" unset="true"/>
                <property name="src.dir" value="alt-src"/>

                <antcall target="build"/>
                <!--<delete dir="alt-src"/>-->
            <!--</try>-->
            <!--<catch>-->
                <delete dir="alt-src"/>
                <!--<fail message="Bad try"/>-->
            <!--</catch>-->
        <!--</trycatch>-->


    </target>

    <target name="change-names">
        <replaceregexp match="${variable}" replace="${variable}_ALTER">
            <fileset dir="alt-src" id="all">
                <include name="**/*.*"/>
            </fileset>
        </replaceregexp>
        <replaceregexp match="${variable}\(\)" replace="${variable}_ALTER()">
            <fileset dir="alt-src">
                <include name="**/*.*"/>
            </fileset>
        </replaceregexp>

        <move file="${variable}.java" tofile="${variable}_ALTER.java">
        </move>
    </target>
</project>